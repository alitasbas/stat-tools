args(qnorm)
args(pnorm)
x = 5
if (x) {}
if (x) {}
if (x) {
print("HI")
}
prob_to_z_score <- function(area, mu = 0, sd = 1, lower.tail = T) {
z <- qnorm(area, mu = mu, sd = sd, lower.tail = lower.tail)
return(z)
}
find_prob <- function(lower.int = F, upper.int = inf, mu = 0, sd = 1, lower.tail = T) {
if (lower.int) {
area <- pnorm(q = upper.int, mu = mu, sd = sd) - pnorm(q = lower.int, mu = mu, sd = sd)
} else {
area <- pnorm(q = upper.int, mu = mu, sd = sd)
}
return(area)
}
z_score <- function(x, mu = 0, sd = 1) {
z <- (x - mu) / sd
return(z)
}
prob_to_z_score(0.5)
prob_to_z_score <- function(area, mus = 0, sd = 1, lower.tail = T) {
z <- qnorm(area, mu = mus, sd = sd, lower.tail = lower.tail)
return(z)
}
prob_to_z_score(0.5)
args(qnorm)
prob_to_z_score <- function(area, mu = 0, sd = 1, lower.tail = T) {
z <- qnorm(area, mean = mus, sd = sd, lower.tail = lower.tail)
return(z)
}
find_prob <- function(lower.int = F, upper.int = inf, mu = 0, sd = 1, lower.tail = T) {
if (lower.int) {
area <- pnorm(q = upper.int, mean = mu, sd = sd) - pnorm(q = lower.int, mu = mu, sd = sd)
} else {
area <- pnorm(q = upper.int, mu = mu, sd = sd)
}
return(area)
}
z_score <- function(x, mu = 0, sd = 1) {
z <- (x - mu) / sd
return(z)
}
args(qnorm)
prob_to_z_score(0.5)
prob_to_z_score <- function(area, mu = 0, sd = 1, lower.tail = T) {
z <- qnorm(area, mean = mu, sd = sd, lower.tail = lower.tail)
return(z)
}
prob_to_z_score(0.5)
prob_to_z_score(0.51)
find_prob <- function(upper.int = inf, mu = 0, sd = 1, lower.int = F,  lower.tail = T) {
if (lower.int) {
area <- pnorm(q = upper.int, mean = mu, sd = sd) - pnorm(q = lower.int, mu = mu, sd = sd)
# ggplot2
} else if (lower.tail == F) {
area <- 1 - pnorm(q = upper.int, mu = mu, sd = sd)
} else {
area <- pnorm(q = upper.int, mu = mu, sd = sd)
}
return(area)
}
z_score <- function(x, mu = 0, sd = 1) {
z <- (x - mu) / sd
return(z)
}
prob_to_z_score <- function(area, mu = 0, sd = 1, lower.tail = T) {
z <- qnorm(area, mean = mu, sd = sd, lower.tail = lower.tail)
return(z)
}
prob_to_z_score(0.025, lower.tail = F)
prob_to_z_score(0.0251, lower.tail = F)
prob_to_z_score(0.0249, lower.tail = F)
find_prob <- function(z = inf, mu = 0, sd = 1, lower.int = F,  lower.tail = T) {
if (lower.int) {
area <- pnorm(q = z, mean = mu, sd = sd) - pnorm(q = lower.int, mu = mu, sd = sd)
# ggplot2
} else if (lower.tail == F) {
area <- 1 - pnorm(q = upper.int, mu = mu, sd = sd)
} else {
area <- pnorm(q = upper.int, mu = mu, sd = sd)
}
return(area)
}
find_prob(1.96, lower.int = 0)
find_prob <- function(z = inf, mu = 0, sd = 1, lower.bound = F,  lower.tail = T) {
if (lower.bound) {
area <- pnorm(q = z, mean = mu, sd = sd) - pnorm(q = lower.bound, mean = mu, sd = sd)
# ggplot2
} else if (lower.tail == F) {
area <- 1 - pnorm(q = upper.int, mean = mu, sd = sd)
} else {
area <- pnorm(q = upper.int, mean = mu, sd = sd)
}
return(area)
}
find_prob(1.96, lower.int = 0)
find_prob(1.96, lower.bound = 0)
find_prob <- function(z = inf, mu = 0, sd = 1, lower.bound = F,  lower.tail = T) {
if (lower.bound) {
area <- pnorm(q = z, mean = mu, sd = sd) - pnorm(q = lower.bound, mean = mu, sd = sd)
# ggplot2
} else if (lower.tail == F) {
area <- 1 - pnorm(q = z, mean = mu, sd = sd)
} else {
area <- pnorm(q = z, mean = mu, sd = sd)
}
return(area)
}
find_prob(1.96, lower.bound = 0)
